{"version":3,"sources":["../../../../work/magiccube/js/Cube.js"],"names":["Cube","center","side","d","vertices","x","y","z","faces","isTopDis","order","distance","isFaceCenter","faceDir","ctx","dx","dy","i","sortarr","replaceFace","forEach","val","index","push","getCenter","as","getInstance","sort","j","length","face","color","fillStyle","beginPath","lineWidth","lineJoin","strokeStyle","k","n_vertices","vertexs","P","project","moveTo","lineTo","closePath","stroke","fill","vertex","theta","phi","rotate","rotatecenter","rotateVector","setColor"],"mappings":"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","file":"Cube.js","sourcesContent":["import {Vertex} from './Vertex.js';\r\nimport {Face} from \"./Face.js\";\r\nimport {CubeUtil} from \"./CubeUtil.js\";\r\n\r\nexport class Cube {\r\n\r\n    constructor(center, side) {\r\n        //中心\r\n        this.center = center;\r\n\r\n        //边长\r\n        this.side = side;\r\n\r\n        //半径\r\n        var d = side / 2;\r\n\r\n        //8个点\r\n        this.vertices = [\r\n            new Vertex(center.x - d, center.y - d, center.z + d),\r\n            new Vertex(center.x - d, center.y - d, center.z - d),\r\n            new Vertex(center.x + d, center.y - d, center.z - d),\r\n            new Vertex(center.x + d, center.y - d, center.z + d),\r\n            new Vertex(center.x + d, center.y + d, center.z + d),\r\n            new Vertex(center.x + d, center.y + d, center.z - d),\r\n            new Vertex(center.x - d, center.y + d, center.z - d),\r\n            new Vertex(center.x - d, center.y + d, center.z + d)\r\n        ];\r\n\r\n        //6个面\r\n        this.faces = [\r\n            new Face([this.vertices[7], this.vertices[6], this.vertices[1], this.vertices[0]]),\r\n            new Face([this.vertices[3], this.vertices[2], this.vertices[5], this.vertices[4]]),\r\n            new Face([this.vertices[0], this.vertices[1], this.vertices[2], this.vertices[3]]),\r\n            new Face([this.vertices[4], this.vertices[5], this.vertices[6], this.vertices[7]]),\r\n            new Face([this.vertices[1], this.vertices[6], this.vertices[5], this.vertices[2]]),\r\n            new Face([this.vertices[7], this.vertices[0], this.vertices[3], this.vertices[4]]),\r\n\r\n        ];\r\n\r\n        //单独旋转一面时，用于标识此方块是否属于旋转的面\r\n        this.isTopDis = false;\r\n\r\n        //单独旋转一面时，本方块所属的面在渲染时的排序 初始化时为-1\r\n        this.order = -1;\r\n\r\n        //中点与无限远处(本例设置为1000px)的面参考点的距离数据\r\n        this.distance = [];\r\n\r\n        //是否是面的中心\r\n        this.isFaceCenter = false;\r\n\r\n        //面的方向 123456 初始化时为-1\r\n        this.faceDir = -1;\r\n    }\r\n\r\n    /**\r\n     * 将自己立方体渲染在canvas上(Y轴垂直于屏幕).\r\n     * @param ctx canvas对象\r\n     * @param dx canvas起点相对立方体中心的x距离\r\n     * @param dy canvas起点相对立方体中心的y距离\r\n     */\r\n    render(ctx, dx, dy, i) {\r\n        var faces = this.faces;\r\n\r\n        let sortarr = [];\r\n        var replaceFace = [];\r\n        faces.forEach(function (val, index) {\r\n                replaceFace.push(val);\r\n                sortarr.push(val.getCenter().y);\r\n        });\r\n        var as = CubeUtil.getInstance().sort(sortarr);\r\n        //遍历6个面\r\n        for (var j = 0; j < as.length; ++j) {\r\n            var face = replaceFace[as[j]];\r\n            var color = face.color;\r\n            if(!color){\r\n                color = 'rgba(236, 236, 236, 1)';\r\n            }\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            ctx.lineWidth = 5; //设置线宽\r\n            ctx.lineJoin = \"round\";\r\n            ctx.strokeStyle = \"#333\";//线条的颜色\r\n            //连接4个点\r\n            for (var k = 0, n_vertices = face.vertexs.length; k < n_vertices; ++k) {\r\n                var P = this.project(face.vertexs[k]);\r\n                if (k == 0) {\r\n                    ctx.moveTo(P.x + dx, P.y + dy);\r\n                } else {\r\n\r\n                    ctx.lineTo(P.x + dx, P.y + dy);\r\n                }\r\n            }\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n            ctx.fill();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 已Y轴为垂线将三维平面的点映射到二维平面.\r\n     * @param vertex vertex\r\n     */\r\n    project(vertex) {\r\n        return new Vertex(vertex.x, vertex.z);\r\n    }\r\n\r\n    /**\r\n     * 绕center旋转\r\n     * @param center 点\r\n     * @param theta 绕X轴的角度\r\n     * @param phi 绕Z轴的角度\r\n     */\r\n    rotate(center, theta, phi) {\r\n        this.vertices.forEach(function(val){\r\n            val.rotate(center, theta, phi);\r\n        })\r\n        this.center.rotate(center, theta, phi);\r\n\r\n    }\r\n\r\n    /**\r\n     * 绕坐标系原点（0，0，0）与点rotatecenter连接的矢量  旋转\r\n     * @param rotatecenter 空间中的一点\r\n     * @param theta 绕的角度\r\n     */\r\n    rotateVector(rotatecenter, theta) {\r\n        this.vertices.forEach(function(val){\r\n            val.rotateVector(rotatecenter, theta);\r\n        })\r\n        this.center.rotateVector(rotatecenter, theta);\r\n    }\r\n\r\n    /**\r\n     * 设置某个面显示的颜色\r\n     * @param i 哪一面\r\n     * @param color 颜色\r\n     */\r\n    setFaceColor(i, color) {\r\n        this.faces[i].setColor(color);\r\n    }\r\n\r\n}"]}