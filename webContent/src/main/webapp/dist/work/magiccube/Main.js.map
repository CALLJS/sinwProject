{"version":3,"sources":["../../../work/magiccube/Main.js"],"names":["Main","initCanvas","magicCube","initCube","renderAll","ctx","dx","dy","addEvent","mian","isRotate","spacedown","xdown","timespace","rotateCount","rotateN","Math","PI","canvas","document","getElementById","width","offsetWidth","height","offsetHeight","getContext","strokeStyle","fillStyle","addEventListener","evt","initMove","getRotateFace","move","stopMove","onkeydown","keyCode","mousedown","mx","clientX","my","clientY","mouseStartX","mouseStartY","theta","phi","rotate","sqrt","i","refv","refVertex","flag","magicfaces","isPointInner","console","log","center","toward","face","rotateFace","cancelAnimationFrame","timer","swapFaceCube","setDisableCube","getFaceOrder","renderFaceAll","requestAnimationFrame","len","length","sortarr","forEach","val","index","push","y","as","getInstance","sort","a"],"mappings":"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","file":"Main.js","sourcesContent":["import {Vertex} from \"./js/Vertex.js\";\r\nimport {MagicCube} from \"./js/MagicCube.js\";\r\nimport {CubeUtil} from \"./js/CubeUtil.js\";\r\n\r\nexport class Main {\r\n    constructor() {\r\n        this.initCanvas();\r\n        var magicCube = new MagicCube(new Vertex(0, 0, 0), 120, 3);\r\n        magicCube.initCube();\r\n        this.magicCube = magicCube;\r\n        magicCube.renderAll(this.ctx, this.dx, this.dy);\r\n        this.addEvent();\r\n\r\n        //初始化旋转的面\r\n        this.mian = 0;\r\n\r\n        //是否在单面旋转\r\n        this.isRotate = false;\r\n\r\n        //空格按下标识\r\n        this.spacedown = true;\r\n        this.xdown = false;\r\n\r\n        //用于配置旋转速度，修改timespace即可\r\n        this.timespace = 50;\r\n        this.rotateCount = 0;\r\n        this.rotateN = Math.PI / 2 / this.timespace;\r\n    }\r\n\r\n    /**\r\n     * 初始化画布.\r\n     */\r\n    initCanvas() {\r\n        var canvas = document.getElementById('cnv');\r\n        canvas.width = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n        this.dx = canvas.width / 2;\r\n        this.dy = canvas.height / 2;\r\n        var ctx = canvas.getContext('2d');\r\n        //画笔颜色\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n        //填充颜色\r\n        ctx.fillStyle = 'rgba(0, 150, 255, 0.3)';\r\n\r\n        this.ctx = ctx;\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    /**\r\n     * 添加鼠标事件.\r\n     */\r\n    addEvent() {\r\n        this.canvas.addEventListener('mousedown', (evt) => {\r\n            this.initMove(evt);\r\n        });\r\n        document.addEventListener('mousemove', (evt) => {\r\n\r\n            if (this.xdown) {\r\n                this.getRotateFace(evt);\r\n            } else {\r\n                this.move(evt);\r\n            }\r\n\r\n        });\r\n        document.addEventListener('mouseup', () => {\r\n            this.stopMove();\r\n        });\r\n        document.onkeydown = (evt) => {\r\n            if (evt.keyCode == 32) {\r\n                this.spacedown = !this.spacedown;\r\n                if (this.mian >= 5) {\r\n                    this.mian = 0;\r\n                }\r\n                this.mian++;\r\n            }\r\n            // if (evt.keyCode == 88) {\r\n            //     this.xdown = true;\r\n            // }\r\n        };\r\n    }\r\n\r\n    initMove(evt) {\r\n        this.mousedown = true;\r\n        this.mx = evt.clientX;\r\n        this.my = evt.clientY;\r\n        this.mouseStartX = evt.clientX;\r\n        this.mouseStartY = evt.clientY;\r\n    }\r\n\r\n    move(evt) {\r\n        var mousedown = this.mousedown;\r\n        var mx = this.mx;\r\n        var my = this.my;\r\n\r\n        if (mousedown && !this.isRotate) {\r\n            var theta = (evt.clientX - mx) * Math.PI / 360;\r\n            var phi = (evt.clientY - my) * Math.PI / 180;\r\n            this.mx = evt.clientX;\r\n            this.my = evt.clientY;\r\n            this.rotate(theta, phi, evt);\r\n        }\r\n    }\r\n\r\n    getRotateFace(evt) {\r\n        var mousedown = this.mousedown;\r\n        var mx = evt.clientX;\r\n        var my = evt.clientY;\r\n        if (mousedown && !this.isRotate) {\r\n            if (Math.sqrt((mx - this.mouseStartX) * (mx - this.mouseStartX) + (my - this.mouseStartY) * (my - this.mouseStartY)) > 100) {\r\n\r\n                for (var i = 0; i < 6; i++) {\r\n                    var refv = this.magicCube.refVertex;\r\n                    var flag = this.magicCube.magicfaces[i].isPointInner(\r\n                        new Vertex(this.mouseStartX, 0, this.mouseStartY ),new Vertex(mx, 0, my ), refv,this.ctx);\r\n                    if (flag) {\r\n                        console.log(i + \"面\");\r\n                        return this.magicCube.magicfaces[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    stopMove() {\r\n        this.mousedown = false;\r\n    }\r\n\r\n    rotate(theta, phi, evt) {\r\n        var center = new Vertex(0, 0, 0);\r\n        var mx = evt.clientX;\r\n        var my = evt.clientY;\r\n        //if (this.spacedown && !this.isRotate && Math.abs(theta) > 0.2) {\r\n        if (this.spacedown && !this.isRotate && Math.sqrt((mx - this.mouseStartX) * (mx - this.mouseStartX) + (my - this.mouseStartY) * (my - this.mouseStartY)) > 120) {\r\n            var toward = theta > 0 ? 1 : -1;\r\n            var face = this.getRotateFace(evt);\r\n\r\n            if(!face){\r\n                return;\r\n            }\r\n            this.rotateFace(toward,evt,face);\r\n            this.isRotate = true;\r\n        }\r\n        else if (!this.spacedown) {\r\n            this.magicCube.rotate(center, theta, phi);\r\n            this.magicCube.renderAll(this.ctx, this.dx, this.dy);\r\n        }\r\n\r\n    }\r\n\r\n    rotateFace(toward,evt,face) {\r\n        this.rotateCount += 1;\r\n        if (this.rotateCount > this.timespace) {\r\n            cancelAnimationFrame(this.timer);\r\n            this.isRotate = false;\r\n            this.rotateCount = 0;\r\n            this.magicCube.swapFaceCube();\r\n        } else {\r\n            this.magicCube.rotateFace(toward * this.rotateN, null, face);\r\n            face.setDisableCube(true, this.getFaceOrder(face));\r\n            this.magicCube.renderFaceAll(this.ctx, this.dx, this.dy);\r\n            face.setDisableCube(false, -1);\r\n            this.timer = requestAnimationFrame(() => this.rotateFace(toward,evt,face));\r\n            // var mian = this.mian;\r\n            // this.magicCube.rotateFace(toward * this.rotateN, null, mian);\r\n            // this.magicCube.magicfaces[mian].setDisableCube(true, this.getFaceOrder(mian));\r\n            // this.magicCube.renderFaceAll(this.ctx, this.dx, this.dy);\r\n            // this.magicCube.magicfaces[mian].setDisableCube(false, -1);\r\n            // this.timer = requestAnimationFrame(() => this.rotateFace(toward));\r\n        }\r\n    }\r\n\r\n    getFaceOrder(face) {\r\n        var len = this.magicCube.magicfaces.length;\r\n        let sortarr = [];\r\n        this.magicCube.magicfaces.forEach(function (val, index) {\r\n            sortarr.push(val.center.y);\r\n        });\r\n        var as = CubeUtil.getInstance().sort(sortarr);\r\n        for (var a = 0; a < len; a++) {\r\n            if (sortarr[a] - face.center.y == 0) {\r\n                return a;\r\n            }\r\n        }\r\n        // var len = this.magicCube.magicfaces.length;\r\n        // let sortarr = [];\r\n        // this.magicCube.magicfaces.forEach(function (val, index) {\r\n        //     sortarr.push(val.center.y);\r\n        // });\r\n        // var as = CubeUtil.getInstance().sort(sortarr);\r\n        // for (var a = 0; a < len; a++) {\r\n        //     if (as[a] == i) {\r\n        //         return a;\r\n        //     }\r\n        //\r\n        // }\r\n    }\r\n}\r\n\r\nnew Main();"]}